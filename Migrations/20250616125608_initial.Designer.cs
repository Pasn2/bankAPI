// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace BankApi.Migrations
{
    [DbContext(typeof(AplicationDBContext))]
    [Migration("20250616125608_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BankApi.Models.BankAccount", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<double>("balance")
                        .HasColumnType("float");

                    b.HasKey("AccountId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("BankApi.Models.Transaction", b =>
                {
                    b.Property<int>("tansactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tansactionId"));

                    b.Property<int?>("BankAccountAccountId")
                        .HasColumnType("int");

                    b.Property<int>("targetAccountId")
                        .HasColumnType("int");

                    b.Property<int>("transactionValue")
                        .HasColumnType("int");

                    b.HasKey("tansactionId");

                    b.HasIndex("BankAccountAccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BankApi.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("users");
                });

            modelBuilder.Entity("BankApi.Models.Transaction", b =>
                {
                    b.HasOne("BankApi.Models.BankAccount", null)
                        .WithMany("transactions")
                        .HasForeignKey("BankAccountAccountId");
                });

            modelBuilder.Entity("BankApi.Models.BankAccount", b =>
                {
                    b.Navigation("transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
